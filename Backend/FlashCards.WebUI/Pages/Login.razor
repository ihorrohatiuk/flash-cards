@page "/Login"
@using FlashCards.WebUI.Models
@using FlashCardsWebAssembly.Services

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService
@*TODO: remove footer from this page*@
@*TODO: remove navbar and navbar button from this page*@

<MudPaper Elevation="4" Style="max-width: 400px;
    margin: 100px auto;
    padding: 30px;
    display: flex;
    flex-direction: column;
    gap: 16px;">
    <MudText Typo="Typo.h4" Align="Align.Center">Log in</MudText>

    <MudForm Valid="_isValid">
        <MudTextField @bind-Value="_loginRequestDto.Email" Label="Email" Required="true" RequiredError="Email is required" />
        <MudTextField @bind-Value="_loginRequestDto.Password" Label="Password" Required="true" InputType="InputType.Password" 
                      RequiredError="Password is required" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SubmitAsync" 
                   Style="margin-top: 30px">Login</MudButton>
    </MudForm>

    @if (_errorMessage != null)
    {
        <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
    }
</MudPaper>

@code {
    /*private string _username = string.Empty;
    private string _password = string.Empty;*/
    private bool _isValid = false;
    private string _errorMessage = null!;

    private LoginRequestDto _loginRequestDto = new LoginRequestDto();
    private DateTime? _expiration;

    private async Task SubmitAsync()
    {
        try
        {
            _expiration = await AuthenticationService.LoginAsync(_loginRequestDto);
        }
        catch (Exception e)
        {
            _expiration = null;

            _errorMessage = e.Message;
        }
    }
}